// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PortfolioBackend.Context;

#nullable disable

namespace PortfolioBackend.Migrations
{
    [DbContext(typeof(PortfolioDbContext))]
    [Migration("20241002150356_adding_relation_in_professional_experience")]
    partial class adding_relation_in_professional_experience
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PortfolioBackend.Models.ProfessionalExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("professional_experiences", (string)null);
                });

            modelBuilder.Entity("PortfolioBackend.Models.Responsabilitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.ToTable("reponsabilities", (string)null);
                });

            modelBuilder.Entity("PortfolioBackend.Models.Technologie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("technologies", (string)null);
                });

            modelBuilder.Entity("PortfolioBackend.Models.TechnologieExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExperienceId")
                        .HasColumnType("integer");

                    b.Property<int>("TechnologieId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.HasIndex("TechnologieId");

                    b.ToTable("technologies_experiences", (string)null);
                });

            modelBuilder.Entity("PortfolioBackend.Models.Responsabilitie", b =>
                {
                    b.HasOne("PortfolioBackend.Models.ProfessionalExperience", "ProfessionalExperience")
                        .WithMany("Responsabilities")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessionalExperience");
                });

            modelBuilder.Entity("PortfolioBackend.Models.TechnologieExperience", b =>
                {
                    b.HasOne("PortfolioBackend.Models.ProfessionalExperience", "ProfessionalExperience")
                        .WithMany("TechnologieExperiences")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioBackend.Models.Technologie", "Technologie")
                        .WithMany()
                        .HasForeignKey("TechnologieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessionalExperience");

                    b.Navigation("Technologie");
                });

            modelBuilder.Entity("PortfolioBackend.Models.ProfessionalExperience", b =>
                {
                    b.Navigation("Responsabilities");

                    b.Navigation("TechnologieExperiences");
                });
#pragma warning restore 612, 618
        }
    }
}
