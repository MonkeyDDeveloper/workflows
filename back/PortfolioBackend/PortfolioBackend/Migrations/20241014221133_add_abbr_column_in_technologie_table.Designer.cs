// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PortfolioBackend.Context;

#nullable disable

namespace PortfolioBackend.Migrations
{
    [DbContext(typeof(PortfolioDbContext))]
    [Migration("20241014221133_add_abbr_column_in_technologie_table")]
    partial class add_abbr_column_in_technologie_table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PortfolioBackend.Models.ProfessionalExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("boolean")
                        .HasColumnName("is_current");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("professional_experiences", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "We created a web application to streamline the student enrollment process.",
                            EndDate = new DateOnly(2022, 7, 31),
                            IsCurrent = false,
                            StartDate = new DateOnly(2021, 2, 1),
                            Title = "FullStack Developer at MonkeyDDevelopment"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Implemented Nomina360, a web app for human resources management.",
                            EndDate = new DateOnly(2023, 11, 30),
                            IsCurrent = false,
                            StartDate = new DateOnly(2022, 10, 1),
                            Title = "FullStack Developer at Soluciones y Proyectos SA"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Developed a client's page using the new version of Shopify Theme Dawn.",
                            EndDate = new DateOnly(2024, 2, 29),
                            IsCurrent = false,
                            StartDate = new DateOnly(2023, 11, 1),
                            Title = "Frontend Developer at CacaoWebStudio"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Created an application to manage the capacitation of operators in Yucatán, México.",
                            EndDate = new DateOnly(2024, 12, 31),
                            IsCurrent = true,
                            StartDate = new DateOnly(2024, 5, 1),
                            Title = "Software Engineer at Dacodes"
                        });
                });

            modelBuilder.Entity("PortfolioBackend.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("projects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Dockerized Product Management System with Authentication"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Name = "Dockerized Python Flask Rest Api - MongoDB"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Name = "Api Gateway - Lambda Functions Rest Api"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Name = "Dockerized Portfolio - .Net - Postgres"
                        });
                });

            modelBuilder.Entity("PortfolioBackend.Models.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("project_tasks", (string)null);
                });

            modelBuilder.Entity("PortfolioBackend.Models.Responsabilitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("integer")
                        .HasColumnName("experience_id");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.ToTable("responsabilities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Defining the current enrollment process and its weaknesses.",
                            ExperienceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Design the pages and use cases, with focus on easy use for its users.",
                            ExperienceId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Make reviews with the administrative staff and the students of the institute.",
                            ExperienceId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Define the correct structure of subjects, students, careers, admin users for the database.",
                            ExperienceId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Be responsible for the frontend, backend, database and release of the application.",
                            ExperienceId = 1
                        },
                        new
                        {
                            Id = 6,
                            Description = "Implement readable and clean code, following the best practices.",
                            ExperienceId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Analyze the requirements to implement them correctly.",
                            ExperienceId = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Realize unit testing of the functions created.",
                            ExperienceId = 2
                        },
                        new
                        {
                            Id = 9,
                            Description = "Have great communication with the rest of the dev team, and also with the administrative team.",
                            ExperienceId = 2
                        },
                        new
                        {
                            Id = 10,
                            Description = "Realize code review of the tasks of the rest of the team.",
                            ExperienceId = 2
                        },
                        new
                        {
                            Id = 11,
                            Description = "Efficiently implement components, snippets, and sections of Shopify.",
                            ExperienceId = 3
                        },
                        new
                        {
                            Id = 12,
                            Description = "Testing every new section created to ensure its working in different screen sizes.",
                            ExperienceId = 3
                        },
                        new
                        {
                            Id = 13,
                            Description = "Priority user experience, make efficient js code.",
                            ExperienceId = 3
                        },
                        new
                        {
                            Id = 14,
                            Description = "Defining project structure.",
                            ExperienceId = 3
                        },
                        new
                        {
                            Id = 15,
                            Description = "Keep track of tasks and good communication with the designing and development team.",
                            ExperienceId = 3
                        },
                        new
                        {
                            Id = 16,
                            Description = "Ensure clean and understandable code (code review).",
                            ExperienceId = 3
                        },
                        new
                        {
                            Id = 17,
                            Description = "Create and implement Vuejs components using domain-driven-design.",
                            ExperienceId = 4
                        },
                        new
                        {
                            Id = 18,
                            Description = "Estimate the time to implement requirements in hours in meetings with the team.",
                            ExperienceId = 4
                        },
                        new
                        {
                            Id = 19,
                            Description = "Follow the business requirements and use cases.",
                            ExperienceId = 4
                        },
                        new
                        {
                            Id = 20,
                            Description = "Good communication with the QA and development team.",
                            ExperienceId = 4
                        },
                        new
                        {
                            Id = 21,
                            Description = "Ensure clean and understandable code and code refactorization.",
                            ExperienceId = 4
                        },
                        new
                        {
                            Id = 22,
                            Description = "Side help with Backend code analysis and DB.",
                            ExperienceId = 4
                        });
                });

            modelBuilder.Entity("PortfolioBackend.Models.Technologie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbr")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("abbr");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("technologies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbr = "nuxt",
                            Name = "Nuxt 3.10.2"
                        },
                        new
                        {
                            Id = 2,
                            Abbr = "vue",
                            Name = "Vue.js 3.4.x"
                        },
                        new
                        {
                            Id = 3,
                            Abbr = "vue",
                            Name = "Vue.js 2.7"
                        },
                        new
                        {
                            Id = 4,
                            Abbr = "vuetify",
                            Name = "Vuetify 2.6"
                        },
                        new
                        {
                            Id = 5,
                            Abbr = "bootstrap",
                            Name = "Bootstrap 4.x"
                        },
                        new
                        {
                            Id = 6,
                            Abbr = "nuxtui",
                            Name = "Nuxt/ui 2.13.0"
                        },
                        new
                        {
                            Id = 7,
                            Abbr = "tailwind",
                            Name = "TailwindCSS 3.4.1"
                        },
                        new
                        {
                            Id = 8,
                            Abbr = "zod",
                            Name = "Zod 3.2.24"
                        },
                        new
                        {
                            Id = 9,
                            Abbr = "node",
                            Name = "Node 20.0.0"
                        },
                        new
                        {
                            Id = 10,
                            Abbr = "postgres",
                            Name = "PostgreSQL 12"
                        },
                        new
                        {
                            Id = 11,
                            Abbr = "git",
                            Name = "Git"
                        },
                        new
                        {
                            Id = 12,
                            Abbr = "docker",
                            Name = "Docker"
                        },
                        new
                        {
                            Id = 13,
                            Abbr = "nuxt",
                            Name = "Nuxt 3.10.2"
                        },
                        new
                        {
                            Id = 14,
                            Abbr = "vue",
                            Name = "Vue.js 3.4.x"
                        },
                        new
                        {
                            Id = 15,
                            Abbr = "nuxtui",
                            Name = "Nuxt/ui 2.13.0"
                        },
                        new
                        {
                            Id = 16,
                            Abbr = "tailwind",
                            Name = "TailwindCSS 3.4.1"
                        },
                        new
                        {
                            Id = 17,
                            Abbr = "zod",
                            Name = "Zod 3.2.24"
                        },
                        new
                        {
                            Id = 18,
                            Abbr = "node",
                            Name = "Node 20.0.0"
                        },
                        new
                        {
                            Id = 19,
                            Abbr = "i18n",
                            Name = "i18n 8.1.1"
                        },
                        new
                        {
                            Id = 20,
                            Abbr = "resend",
                            Name = "Resend 3.2.0"
                        },
                        new
                        {
                            Id = 21,
                            Abbr = "shopify",
                            Name = "Shopify Dawn 13.0.1"
                        },
                        new
                        {
                            Id = 22,
                            Abbr = "liquidtemplate",
                            Name = "Liquid Template Language 5.4.0"
                        },
                        new
                        {
                            Id = 23,
                            Abbr = "git",
                            Name = "Git"
                        },
                        new
                        {
                            Id = 24,
                            Abbr = "vue",
                            Name = "Vue.js 3.2.3"
                        },
                        new
                        {
                            Id = 25,
                            Abbr = "node",
                            Name = "Node 10.24.0"
                        },
                        new
                        {
                            Id = 26,
                            Abbr = "quasar",
                            Name = "Quasar Framework 0.17"
                        },
                        new
                        {
                            Id = 27,
                            Abbr = "mongo",
                            Name = "MongoDB 5.0"
                        },
                        new
                        {
                            Id = 28,
                            Abbr = "typescript",
                            Name = "TypeScript 5.4"
                        },
                        new
                        {
                            Id = 29,
                            Abbr = "javascript",
                            Name = "JavaScript (Vanilla)"
                        },
                        new
                        {
                            Id = 30,
                            Abbr = "pugjs",
                            Name = "Pug.js (HTML)"
                        },
                        new
                        {
                            Id = 31,
                            Abbr = "bootstrap",
                            Name = "Bootstrap 5.0"
                        },
                        new
                        {
                            Id = 32,
                            Abbr = "node",
                            Name = "Node.js 14.0.0"
                        },
                        new
                        {
                            Id = 33,
                            Abbr = "express",
                            Name = "Express 4.0"
                        },
                        new
                        {
                            Id = 34,
                            Abbr = "mongo",
                            Name = "MongoDB 5.0"
                        },
                        new
                        {
                            Id = 35,
                            Abbr = "digitalocean",
                            Name = "DigitalOcean"
                        },
                        new
                        {
                            Id = 36,
                            Abbr = "nginx",
                            Name = "Nginx"
                        },
                        new
                        {
                            Id = 37,
                            Abbr = "namecheap",
                            Name = "NameCheap"
                        },
                        new
                        {
                            Id = 38,
                            Abbr = "jwt",
                            Name = "JsonWebTokens"
                        },
                        new
                        {
                            Id = 39,
                            Abbr = "python",
                            Name = "Python 3.10.12"
                        },
                        new
                        {
                            Id = 40,
                            Abbr = "flask",
                            Name = "Flask 3.0.3"
                        },
                        new
                        {
                            Id = 41,
                            Abbr = "pymongo",
                            Name = "PyMongo 4.7.2"
                        },
                        new
                        {
                            Id = 42,
                            Abbr = "mongoose",
                            Name = "Mongoose"
                        },
                        new
                        {
                            Id = 43,
                            Abbr = "awsgateway",
                            Name = "AWS API Gateway"
                        },
                        new
                        {
                            Id = 44,
                            Abbr = "awslambda",
                            Name = "AWS Lambda Functions"
                        },
                        new
                        {
                            Id = 45,
                            Abbr = "nextjs",
                            Name = "Nextjs"
                        },
                        new
                        {
                            Id = 46,
                            Abbr = "postgres",
                            Name = "PostgreSQL"
                        },
                        new
                        {
                            Id = 47,
                            Abbr = "DotNET",
                            Name = ".NET 8"
                        },
                        new
                        {
                            Id = 48,
                            Abbr = "entityframework",
                            Name = "Entity Framework"
                        },
                        new
                        {
                            Id = 49,
                            Abbr = "digitalocean",
                            Name = "Digital Ocean Droplets"
                        },
                        new
                        {
                            Id = 50,
                            Abbr = "githubactions",
                            Name = "Github Actions"
                        });
                });

            modelBuilder.Entity("PortfolioBackend.Models.TechnologieExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExperienceId")
                        .HasColumnType("integer")
                        .HasColumnName("experience_id");

                    b.Property<int>("TechnologieId")
                        .HasColumnType("integer")
                        .HasColumnName("technologie_id");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.HasIndex("TechnologieId");

                    b.ToTable("technologies_experiences", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExperienceId = 4,
                            TechnologieId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExperienceId = 4,
                            TechnologieId = 2
                        },
                        new
                        {
                            Id = 3,
                            ExperienceId = 4,
                            TechnologieId = 3
                        },
                        new
                        {
                            Id = 4,
                            ExperienceId = 4,
                            TechnologieId = 4
                        },
                        new
                        {
                            Id = 5,
                            ExperienceId = 4,
                            TechnologieId = 5
                        },
                        new
                        {
                            Id = 6,
                            ExperienceId = 4,
                            TechnologieId = 6
                        },
                        new
                        {
                            Id = 7,
                            ExperienceId = 4,
                            TechnologieId = 7
                        },
                        new
                        {
                            Id = 8,
                            ExperienceId = 4,
                            TechnologieId = 8
                        },
                        new
                        {
                            Id = 9,
                            ExperienceId = 4,
                            TechnologieId = 9
                        },
                        new
                        {
                            Id = 10,
                            ExperienceId = 4,
                            TechnologieId = 10
                        },
                        new
                        {
                            Id = 11,
                            ExperienceId = 4,
                            TechnologieId = 11
                        },
                        new
                        {
                            Id = 12,
                            ExperienceId = 4,
                            TechnologieId = 12
                        },
                        new
                        {
                            Id = 13,
                            ExperienceId = 3,
                            TechnologieId = 13
                        },
                        new
                        {
                            Id = 14,
                            ExperienceId = 3,
                            TechnologieId = 14
                        },
                        new
                        {
                            Id = 15,
                            ExperienceId = 3,
                            TechnologieId = 16
                        },
                        new
                        {
                            Id = 16,
                            ExperienceId = 3,
                            TechnologieId = 17
                        },
                        new
                        {
                            Id = 17,
                            ExperienceId = 3,
                            TechnologieId = 18
                        },
                        new
                        {
                            Id = 18,
                            ExperienceId = 3,
                            TechnologieId = 19
                        },
                        new
                        {
                            Id = 19,
                            ExperienceId = 3,
                            TechnologieId = 20
                        },
                        new
                        {
                            Id = 20,
                            ExperienceId = 3,
                            TechnologieId = 21
                        },
                        new
                        {
                            Id = 21,
                            ExperienceId = 3,
                            TechnologieId = 22
                        },
                        new
                        {
                            Id = 22,
                            ExperienceId = 2,
                            TechnologieId = 24
                        },
                        new
                        {
                            Id = 23,
                            ExperienceId = 2,
                            TechnologieId = 25
                        },
                        new
                        {
                            Id = 24,
                            ExperienceId = 2,
                            TechnologieId = 26
                        },
                        new
                        {
                            Id = 25,
                            ExperienceId = 2,
                            TechnologieId = 27
                        },
                        new
                        {
                            Id = 26,
                            ExperienceId = 2,
                            TechnologieId = 28
                        },
                        new
                        {
                            Id = 27,
                            ExperienceId = 1,
                            TechnologieId = 29
                        },
                        new
                        {
                            Id = 28,
                            ExperienceId = 1,
                            TechnologieId = 30
                        },
                        new
                        {
                            Id = 29,
                            ExperienceId = 1,
                            TechnologieId = 31
                        },
                        new
                        {
                            Id = 30,
                            ExperienceId = 1,
                            TechnologieId = 32
                        },
                        new
                        {
                            Id = 31,
                            ExperienceId = 1,
                            TechnologieId = 33
                        },
                        new
                        {
                            Id = 32,
                            ExperienceId = 1,
                            TechnologieId = 34
                        },
                        new
                        {
                            Id = 33,
                            ExperienceId = 1,
                            TechnologieId = 35
                        },
                        new
                        {
                            Id = 34,
                            ExperienceId = 1,
                            TechnologieId = 36
                        },
                        new
                        {
                            Id = 35,
                            ExperienceId = 1,
                            TechnologieId = 37
                        });
                });

            modelBuilder.Entity("PortfolioBackend.Models.TechnologieProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.Property<int>("TechnologieId")
                        .HasColumnType("integer")
                        .HasColumnName("technologie_id");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TechnologieId");

                    b.ToTable("TechnologieProject");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectId = 1,
                            TechnologieId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProjectId = 1,
                            TechnologieId = 2
                        },
                        new
                        {
                            Id = 3,
                            ProjectId = 1,
                            TechnologieId = 6
                        },
                        new
                        {
                            Id = 4,
                            ProjectId = 1,
                            TechnologieId = 11
                        },
                        new
                        {
                            Id = 5,
                            ProjectId = 1,
                            TechnologieId = 12
                        },
                        new
                        {
                            Id = 6,
                            ProjectId = 1,
                            TechnologieId = 33
                        },
                        new
                        {
                            Id = 7,
                            ProjectId = 1,
                            TechnologieId = 34
                        },
                        new
                        {
                            Id = 8,
                            ProjectId = 1,
                            TechnologieId = 28
                        },
                        new
                        {
                            Id = 9,
                            ProjectId = 1,
                            TechnologieId = 38
                        },
                        new
                        {
                            Id = 10,
                            ProjectId = 2,
                            TechnologieId = 12
                        },
                        new
                        {
                            Id = 11,
                            ProjectId = 2,
                            TechnologieId = 39
                        },
                        new
                        {
                            Id = 12,
                            ProjectId = 2,
                            TechnologieId = 40
                        },
                        new
                        {
                            Id = 13,
                            ProjectId = 2,
                            TechnologieId = 41
                        },
                        new
                        {
                            Id = 14,
                            ProjectId = 3,
                            TechnologieId = 42
                        },
                        new
                        {
                            Id = 15,
                            ProjectId = 3,
                            TechnologieId = 43
                        },
                        new
                        {
                            Id = 16,
                            ProjectId = 3,
                            TechnologieId = 44
                        },
                        new
                        {
                            Id = 17,
                            ProjectId = 3,
                            TechnologieId = 28
                        },
                        new
                        {
                            Id = 18,
                            ProjectId = 4,
                            TechnologieId = 45
                        },
                        new
                        {
                            Id = 19,
                            ProjectId = 4,
                            TechnologieId = 46
                        },
                        new
                        {
                            Id = 20,
                            ProjectId = 4,
                            TechnologieId = 47
                        },
                        new
                        {
                            Id = 21,
                            ProjectId = 4,
                            TechnologieId = 48
                        },
                        new
                        {
                            Id = 22,
                            ProjectId = 4,
                            TechnologieId = 49
                        },
                        new
                        {
                            Id = 23,
                            ProjectId = 4,
                            TechnologieId = 50
                        },
                        new
                        {
                            Id = 24,
                            ProjectId = 4,
                            TechnologieId = 28
                        },
                        new
                        {
                            Id = 25,
                            ProjectId = 4,
                            TechnologieId = 12
                        },
                        new
                        {
                            Id = 26,
                            ProjectId = 4,
                            TechnologieId = 23
                        });
                });

            modelBuilder.Entity("PortfolioBackend.Models.ProjectTask", b =>
                {
                    b.HasOne("PortfolioBackend.Models.Project", "Project")
                        .WithMany("ProjectTasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PortfolioBackend.Models.Responsabilitie", b =>
                {
                    b.HasOne("PortfolioBackend.Models.ProfessionalExperience", "ProfessionalExperience")
                        .WithMany("Responsabilities")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessionalExperience");
                });

            modelBuilder.Entity("PortfolioBackend.Models.TechnologieExperience", b =>
                {
                    b.HasOne("PortfolioBackend.Models.ProfessionalExperience", "ProfessionalExperience")
                        .WithMany("TechnologieExperiences")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioBackend.Models.Technologie", "Technologie")
                        .WithMany()
                        .HasForeignKey("TechnologieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessionalExperience");

                    b.Navigation("Technologie");
                });

            modelBuilder.Entity("PortfolioBackend.Models.TechnologieProject", b =>
                {
                    b.HasOne("PortfolioBackend.Models.Project", "Project")
                        .WithMany("ProjectTechnologies")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioBackend.Models.Technologie", "Technologie")
                        .WithMany()
                        .HasForeignKey("TechnologieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Technologie");
                });

            modelBuilder.Entity("PortfolioBackend.Models.ProfessionalExperience", b =>
                {
                    b.Navigation("Responsabilities");

                    b.Navigation("TechnologieExperiences");
                });

            modelBuilder.Entity("PortfolioBackend.Models.Project", b =>
                {
                    b.Navigation("ProjectTasks");

                    b.Navigation("ProjectTechnologies");
                });
#pragma warning restore 612, 618
        }
    }
}
